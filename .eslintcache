[{"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/index.js":"1","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/App.js":"2","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/reportWebVitals.js":"3","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/Homepage.js":"4","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/PhotoOfDay.js":"5","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/MarsWeather.js":"6","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NavBar.js":"7","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/routes.js":"8","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/Footer.js":"9","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/ImageLibrary.js":"10","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/ImageModal.js":"11","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/SearchResults.js":"12","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/EventTrackers.js":"13","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/Map.js":"14","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/ShowButton.js":"15"},{"size":583,"mtime":1611631867688,"results":"16","hashOfConfig":"17"},{"size":240,"mtime":1611710926861,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611603669475,"results":"19","hashOfConfig":"17"},{"size":1537,"mtime":1612151807882,"results":"20","hashOfConfig":"17"},{"size":1813,"mtime":1611712577920,"results":"21","hashOfConfig":"17"},{"size":337,"mtime":1611610486500,"results":"22","hashOfConfig":"17"},{"size":2560,"mtime":1611717735587,"results":"23","hashOfConfig":"17"},{"size":877,"mtime":1612299989179,"results":"24","hashOfConfig":"17"},{"size":361,"mtime":1612147885439,"results":"25","hashOfConfig":"17"},{"size":5504,"mtime":1612233368295,"results":"26","hashOfConfig":"17"},{"size":1883,"mtime":1612238278683,"results":"27","hashOfConfig":"17"},{"size":3401,"mtime":1612403904882,"results":"28","hashOfConfig":"17"},{"size":1499,"mtime":1612842834116,"results":"29","hashOfConfig":"17"},{"size":3196,"mtime":1612842838426,"results":"30","hashOfConfig":"17"},{"size":3127,"mtime":1612842796429,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xs700j",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/index.js",[],["66","67"],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/App.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/reportWebVitals.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/Homepage.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/PhotoOfDay.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/MarsWeather.js",["68"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nexport default function MarsWeather() {\n  const [marsInfo, setMarsInfo] = useState([])\n\n  useEffect(() => {\n    axios.get(`/api/nasa/mars`).then((res) => {\n      setMarsInfo(res.data)\n    })\n  }, [])\n\n\n  return (\n    <div>\n      Mars Weather\n    </div>\n  )\n}","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NavBar.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/routes.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/Footer.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/ImageLibrary.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/ImageModal.js",["69","70"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Backdrop, Fade, Typography, CardMedia, Card } from '@material-ui/core';\nimport '../../Styling/ImageLibrary.css'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  media: {\n    height: 500,\n  },\n}));\n\nexport default function ImageModal(props) {\n\n\n  const { open, setOpen, imgIndex, images } = props\n  const classes = useStyles();\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <div className=\"modal-div\">\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className=\"modal-container\"\n        open={open}\n        onClose={handleClose}\n        // closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div\n              className=\"modal-img-container\"\n\n            >\n              <img\n                className=\"modal-img\"\n                alt={images[imgIndex].data[0].title}\n                src={images[imgIndex].links[0].href}\n\n              />\n              <body className=\"modal-description\">\n                <Typography\n                  align='center'\n                >\n                  {images[imgIndex].data[0].title}\n\n                </Typography>\n                <Typography >\n                  {images[imgIndex].data[0].description}\n                </Typography>\n              </body>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div >\n  );\n}\n","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/ImageLibrary/SearchResults.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/EventTrackers.js",[],"/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/Map.js",["71"],"import React from 'react'\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport ShowButton from './ShowButton'\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst center = {\n  lat: 39,\n  lng: -98\n};\n\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true,\n  restriction: {\n    latLngBounds: { north: 85, south: -85, west: -180, east: 180 },\n  },\n}\n\n\nfunction MapComponent(props) {\n  const { isLoaded } = useLoadScript({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  function iconFinder(cat) {\n    const DROUGHT = 'drought'\n    const DUSTHAZE = 'dustHaze'\n    const EARTHQUAKES = 'earthquakes'\n    const FLOODS = 'Floods'\n    const LANDSLIDES = 'landslides'\n    const MANDMADE = 'manmade'\n    const SEALAKEICE = 'seaLakeIce'\n    const SEVERESTORMS = 'severeStorms'\n    const SNOW = 'snow'\n    const TEMPEXTREMES = 'tempExtremes'\n    const VOLCANOES = 'volcanoes'\n    const WATERCOLOR = 'waterColor'\n    const WILDFIRES = 'wildfires'\n\n    let icon\n\n    switch (cat) {\n      case DROUGHT:\n        icon = '/assets/drought.svg'\n        break\n      case DUSTHAZE:\n        icon = '/assets/dusthaze.png'\n        break\n      case EARTHQUAKES:\n        icon = '/assets/earthquake.png'\n        break\n      case FLOODS:\n        icon = '/assets/floods.png'\n        break\n      case LANDSLIDES:\n        icon = '/assets/landslide.png'\n        break\n      case MANDMADE:\n        icon = '/assets/manmade.png'\n        break\n      case SEALAKEICE:\n        icon = '/assets/iceberg.svg'\n        break\n      case SEVERESTORMS:\n        icon = '/assets/severeweather.png'\n        break\n      case SNOW:\n        icon = '/assets/snow.png'\n        break\n      case TEMPEXTREMES:\n        icon = '/assets/extremetemp.png'\n        break\n      case VOLCANOES:\n        icon = '/assets/volcanoe.png'\n        break\n      case WATERCOLOR:\n        icon = '/assets/watercolor.png'\n        break\n      case WILDFIRES:\n        icon = '/assets/wildfire.svg'\n        break\n      default:\n        console.log('Returned no icon')\n        return null\n    }\n\n    return icon\n  }\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n      options={options}\n      mapTypeControl={false}\n      scaleControl={false}\n    >\n      <ShowButton array={props.array} />\n      {props.events.map((e, i) => {\n        return <Marker key={i}\n          position={{ lat: e.geometry[0].coordinates[1], lng: e.geometry[0].coordinates[0] }}\n          onClick={() => console.log(e.categories[0].id)}\n          icon={{\n            url: iconFinder(e.categories[0].id),\n            scaledSize: new window.google.maps.Size(25, 25)\n          }}\n\n        />\n      })}\n    </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(MapComponent)","/Users/admin/full-time-unemployed-dev/nasa/nasa-project/src/Components/NaturalEvents/ShowButton.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":3,"column":45,"nodeType":"78","messageId":"79","endLine":3,"endColumn":54},{"ruleId":"76","severity":1,"message":"81","line":3,"column":56,"nodeType":"78","messageId":"79","endLine":3,"endColumn":60},{"ruleId":"76","severity":1,"message":"82","line":30,"column":10,"nodeType":"78","messageId":"79","endLine":30,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'marsInfo' is assigned a value but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'Card' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]